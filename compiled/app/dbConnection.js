'use strict';

var knex = require('knex')({
  client: 'mysql',
  connection: {
    host: 'us-cdbr-iron-east-04.cleardb.net',
    user: 'b4a24a2c3715e7',
    password: 'fb639af9',
    database: 'heroku_d9adeb5ca79352b'
  }
});

var db = require('bookshelf')(knex);

db.knex.schema.hasTable('movies').then(function (exists) {
  if (!exists) {
    db.knex.schema.createTable('movies', function (movie) {
      movie.integer('id').primary();
      movie.string('title', 255);
      movie.string('genre', 255);
      movie.string('poster', 255);
      movie.string('release_date', 255);
      movie.string('description', 255);
      movie.integer('imdbRating');
    }).raw('ALTER TABLE movies ADD FULLTEXT (title)').then(function (table) {
      console.log('Created Table', table);
    });
  }
});

db.knex.schema.hasTable('ratings').then(function (exists) {
  if (!exists) {
    db.knex.schema.createTable('ratings', function (rating) {
      rating.increments('id').primary();
      rating.integer('score');
      rating.integer('movieid');
      rating.integer('userid');
      rating.string('review', 255);
      rating.timestamps();
    }).then(function (table) {
      console.log('Created Table', table);
    });
  }
});

db.knex.schema.hasTable('users').then(function (exists) {
  if (!exists) {
    db.knex.schema.createTable('users', function (user) {
      user.increments('id').primary();
      user.string('username', 255).unique();
      user.string('password', 255);
      user.string('email', 255);
      user.string('firstName', 255);
      user.string('lastName', 255);
      user.string('profilePicture', 255);
    }).then(function (table) {
      console.log('Created Table', table);
    });
  }
});

db.knex.schema.hasTable('relations').then(function (exists) {
  if (!exists) {
    db.knex.schema.createTable('relations', function (relation) {
      relation.increments('id').primary();
      relation.integer('user1id');
      relation.integer('user2id');
    }).then(function (table) {
      console.log('Created Table', table);
    });
  }
});

db.knex.schema.hasTable('allRequests').then(function (exists) {
  if (!exists) {
    db.knex.schema.createTable('allRequests', function (request) {
      request.increments('id').primary();
      request.string('requestor', 255);
      request.string('requestee', 255);
      request.string('requestTyp', 255);
      request.string('movie', 255);
      request.string('message', 255);
      request.string('response', 255);
    }).then(function (table) {
      console.log('Created Table', table);
    });
  }
});

module.exports = db;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2FwcC9kYkNvbm5lY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE9BQU8sUUFBUSxNQUFSLEVBQWdCO0FBQ3pCLFVBQVEsT0FEaUI7QUFFekIsY0FBWTtBQUNWLFVBQVcsa0NBREQ7QUFFVixVQUFXLGdCQUZEO0FBR1YsY0FBVyxVQUhEO0FBSVYsY0FBVztBQUpEO0FBRmEsQ0FBaEIsQ0FBWDs7QUFVQSxJQUFJLEtBQUssUUFBUSxXQUFSLEVBQXFCLElBQXJCLENBQVQ7O0FBRUEsR0FBRyxJQUFILENBQVEsTUFBUixDQUFlLFFBQWYsQ0FBd0IsUUFBeEIsRUFBa0MsSUFBbEMsQ0FBdUMsVUFBUyxNQUFULEVBQWlCO0FBQ3RELE1BQUksQ0FBQyxNQUFMLEVBQWE7QUFDWCxPQUFHLElBQUgsQ0FBUSxNQUFSLENBQWUsV0FBZixDQUEyQixRQUEzQixFQUFxQyxVQUFVLEtBQVYsRUFBaUI7QUFDcEQsWUFBTSxPQUFOLENBQWMsSUFBZCxFQUFvQixPQUFwQjtBQUNBLFlBQU0sTUFBTixDQUFhLE9BQWIsRUFBc0IsR0FBdEI7QUFDQSxZQUFNLE1BQU4sQ0FBYSxPQUFiLEVBQXNCLEdBQXRCO0FBQ0EsWUFBTSxNQUFOLENBQWEsUUFBYixFQUF1QixHQUF2QjtBQUNBLFlBQU0sTUFBTixDQUFhLGNBQWIsRUFBNkIsR0FBN0I7QUFDQSxZQUFNLE1BQU4sQ0FBYSxhQUFiLEVBQTRCLEdBQTVCO0FBQ0EsWUFBTSxPQUFOLENBQWMsWUFBZDtBQUNELEtBUkQsRUFTQyxHQVRELDRDQVVDLElBVkQsQ0FVTSxVQUFVLEtBQVYsRUFBaUI7QUFDckIsY0FBUSxHQUFSLENBQVksZUFBWixFQUE2QixLQUE3QjtBQUNELEtBWkQ7QUFhRDtBQUNGLENBaEJEOztBQWtCQSxHQUFHLElBQUgsQ0FBUSxNQUFSLENBQWUsUUFBZixDQUF3QixTQUF4QixFQUFtQyxJQUFuQyxDQUF3QyxVQUFTLE1BQVQsRUFBaUI7QUFDdkQsTUFBSSxDQUFDLE1B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RCxLQVZEO0FBV0Q7QUFDRixDQWREOztBQWdCQSxPQUFPLE9BQVAsR0FBaUIsRUFBakIiLCJmaWxlIjoiZGJDb25uZWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGtuZXggPSByZXF1aXJlKCdrbmV4Jykoe1xuICBjbGllbnQ6ICdteXNxbCcsXG4gIGNvbm5lY3Rpb246IHtcbiAgICBob3N0ICAgICA6ICd1cy1jZGJyLWlyb24tZWFzdC0wNC5jbGVhcmRiLm5ldCcsXG4gICAgdXNlciAgICAgOiAnYjRhMjRhMmMzNzE1ZTcnLFxuICAgIHBhc3N3b3JkIDogJ2ZiNjM5YWY5JyxcbiAgICBkYXRhYmFzZSA6ICdoZXJva3VfZDlhZGViNWNhNzkzNTJiJ1xuICB9XG59KTtcblxudmFyIGRiID0gcmVxdWlyZSgnYm9va3NoZWxmJykoa25leCk7XG5cbmRiLmtuZXguc2NoZW1hLmhhc1RhYmxlKCdtb3ZpZXMnKS50aGVuKGZ1bmN0aW9uKGV4aXN0cykge1xuICBpZiAoIWV4aXN0cykge1xuICAgIGRiLmtuZXguc2NoZW1hLmNyZWF0ZVRhYmxlKCdtb3ZpZXMnLCBmdW5jdGlvbiAobW92aWUpIHtcbiAgICAgIG1vdmllLmludGVnZXIoJ2lkJykucHJpbWFyeSgpO1xuICAgICAgbW92aWUuc3RyaW5nKCd0aXRsZScsIDI1NSk7XG4gICAgICBtb3ZpZS5zdHJpbmcoJ2dlbnJlJywgMjU1KTtcbiAgICAgIG1vdmllLnN0cmluZygncG9zdGVyJywgMjU1KTtcbiAgICAgIG1vdmllLnN0cmluZygncmVsZWFzZV9kYXRlJywgMjU1KTtcbiAgICAgIG1vdmllLnN0cmluZygnZGVzY3JpcHRpb24nLCAyNTUpO1xuICAgICAgbW92aWUuaW50ZWdlcignaW1kYlJhdGluZycpO1xuICAgIH0pXG4gICAgLnJhdyhgQUxURVIgVEFCTEUgbW92aWVzIEFERCBGVUxMVEVYVCAodGl0bGUpYClcbiAgICAudGhlbihmdW5jdGlvbiAodGFibGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdDcmVhdGVkIFRhYmxlJywgdGFibGUpO1xuICAgIH0pO1xuICB9XG59KTtcblxuZGIua25leC5zY2hlbWEuaGFzVGFibGUoJ3JhdGluZ3MnKS50aGVuKGZ1bmN0aW9uKGV4aXN0cykge1xuICBpZiAoIWV4aXN0cykge1xuICAgIGRiLmtuZXguc2NoZW1hLmNyZWF0ZVRhYmxlKCdyYXRpbmdzJywgZnVuY3Rpb24gKHJhdGluZykge1xuICAgICAgcmF0aW5nLmluY3JlbWVudHMoJ2lkJykucHJpbWFyeSgpO1xuICAgICAgcmF0aW5nLmludGVnZXIoJ3Njb3JlJyk7XG4gICAgICByYXRpbmcuaW50ZWdlcignbW92aWVpZCcpO1xuICAgICAgcmF0aW5nLmludGVnZXIoJ3VzZXJpZCcpO1xuICAgICAgcmF0aW5nLnN0cmluZygncmV2aWV3JywgMjU1KTtcbiAgICAgIHJhdGluZy50aW1lc3RhbXBzKCk7XG4gICAgfSkudGhlbihmdW5jdGlvbiAodGFibGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdDcmVhdGVkIFRhYmxlJywgdGFibGUpO1xuICAgIH0pO1xuICB9XG59KTtcblxuZGIua25leC5zY2hlbWEuaGFzVGFibGUoJ3VzZXJzJykudGhlbihmdW5jdGlvbihleGlzdHMpIHtcbiAgaWYgKCFleGlzdHMpIHtcbiAgICBkYi5rbmV4LnNjaGVtYS5jcmVhdGVUYWJsZSgndXNlcnMnLCBmdW5jdGlvbih1c2VyKSB7XG4gICAgICB1c2VyLmluY3JlbWVudHMoJ2lkJykucHJpbWFyeSgpO1xuICAgICAgdXNlci5zdHJpbmcoJ3VzZXJuYW1lJywgMjU1KS51bmlxdWUoKTtcbiAgICAgIHVzZXIuc3RyaW5nKCdwYXNzd29yZCcsIDI1NSk7XG4gICAgICB1c2VyLnN0cmluZygnZW1haWwnLCAyNTUpO1xuICAgICAgdXNlci5zdHJpbmcoJ2ZpcnN0TmFtZScsIDI1NSk7XG4gICAgICB1c2VyLnN0cmluZygnbGFzdE5hbWUnLCAyNTUpO1xuICAgICAgdXNlci5zdHJpbmcoJ3Byb2ZpbGVQaWN0dXJlJywgMjU1KTtcbiAgICB9KS50aGVuKGZ1bmN0aW9uICh0YWJsZSkge1xuICAgICAgY29uc29sZS5sb2coJ0NyZWF0ZWQgVGFibGUnLCB0YWJsZSk7XG4gICAgfSk7XG4gIH1cbn0pO1xuXG5kYi5rbmV4LnNjaGVtYS5oYXNUYWJsZSgncmVsYXRpb25zJykudGhlbihmdW5jdGlvbihleGlzdHMpIHtcbiAgaWYgKCFleGlzdHMpIHtcbiAgICBkYi5rbmV4LnNjaGVtYS5jcmVhdGVUYWJsZSgncmVsYXRpb25zJywgZnVuY3Rpb24ocmVsYXRpb24pIHtcbiAgICAgIHJlbGF0aW9uLmluY3JlbWVudHMoJ2lkJykucHJpbWFyeSgpO1xuICAgICAgcmVsYXRpb24uaW50ZWdlcigndXNlcjFpZCcpO1xuICAgICAgcmVsYXRpb24uaW50ZWdlcigndXNlcjJpZCcpO1xuICAgIH0pLnRoZW4oZnVuY3Rpb24gKHRhYmxlKSB7XG4gICAgICBjb25zb2xlLmxvZygnQ3JlYXRlZCBUYWJsZScsIHRhYmxlKTtcbiAgICB9KTtcbiAgfVxufSk7XG5cbmRiLmtuZXguc2NoZW1hLmhhc1RhYmxlKCdhbGxSZXF1ZXN0cycpLnRoZW4oZnVuY3Rpb24oZXhpc3RzKSB7XG4gIGlmICghZXhpc3RzKSB7XG4gICAgZGIua25leC5zY2hlbWEuY3JlYXRlVGFibGUoJ2FsbFJlcXVlc3RzJywgZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgICAgcmVxdWVzdC5pbmNyZW1lbnRzKCdpZCcpLnByaW1hcnkoKTtcbiAgICAgIHJlcXVlc3Quc3RyaW5nKCdyZXF1ZXN0b3InLCAyNTUpO1xuICAgICAgcmVxdWVzdC5zdHJpbmcoJ3JlcXVlc3RlZScsIDI1NSk7XG4gICAgICByZXF1ZXN0LnN0cmluZygncmVxdWVzdFR5cCcsIDI1NSk7XG4gICAgICByZXF1ZXN0LnN0cmluZygnbW92aWUnLDI1NSk7XG4gICAgICByZXF1ZXN0LnN0cmluZygnbWVzc2FnZScsIDI1NSk7XG4gICAgICByZXF1ZXN0LnN0cmluZygncmVzcG9uc2UnLCAyNTUpO1xuICAgIH0pLnRoZW4oZnVuY3Rpb24gKHRhYmxlKSB7XG4gICAgICBjb25zb2xlLmxvZygnQ3JlYXRlZCBUYWJsZScsIHRhYmxlKTtcbiAgICB9KTtcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG5cblxuXG4iXX0=