'use strict';

var handler = require('./lib/request-handler.js'),
    express = require('express'),
    app = express(),
    bodyParser = require('body-parser'),
    sessions = require("client-sessions"),
    cors = require('cors');


app.get('*', function (a, b, c) {
  if (a.headers['x-forwarded-proto'] !== 'https') {
    b.redirect('https://' + a.hostname + a.url);
  } else {
    c();
  }
});

app.use(cors());
app.use(sessions({
  cookieName: 'mySession', // cookie name dictates the key name added to the request object
  secret: 'blargadeeblargblarg', // should be a large unguessable string
  resave: !0,
  duration: 24 * 60 * 60 * 1000, // how long the session will stay valid in ms
  activeDuration: 1000 * 60 * 5, // if expiresIn < activeDuration, the session will be extended by activeDuration milliseconds
  saveInitialized: !0
}));

app.use(bodyParser.urlencoded({ extended: !0 }));
app.use(bodyParser.json());
app.use(express.static(__dirname + '/public'));
app.use('/scripts', express.static(__dirname + '/node_modules'));
app.use('/compiled', express.static(__dirname + '/compiled'));

app.post('/signup', handler.signupUser);
app.post('/login', handler.signinUser);
app.get('/login', function (a, b) {});

//////////////////
//Handling friends
//////////////////

//friend requests
app.post('/listRequests', handler.listRequests);
app.post('/sendRequest', handler.sendRequest);
//Friend requests
app.post('/getThisFriendsMovies', handler.getThisFriendsMovies);
app.post('/logout', handler.logout);

app.post('/sendWatchRequest', handler.sendWatchRequest);
app.delete('/sendWatchRequest', handler.removeWatchRequest);

app.post('/decline', handler.decline);
app.post('/accept', handler.accept);
app.delete('/removeRequest', handler.removeRequest);

app.post('/findMovieBuddies', handler.findMovieBuddies);
app.post('/getFriends', handler.getFriends);
app.get('/getFriendList', handler.getFriendList);

//////////////////
//Handling movies
//////////////////
app.post('/ratemovie', handler.rateMovie);
app.get('/recentRelease', handler.getRecentRelease);
app.get('/getUserRatings', handler.getUserRatings);
app.get('/getFriendUserRatings', handler.getFriendUserRatings);
app.post('/getMultipleMovieRatings', handler.getMultipleMovieRatings);
app.post('/getFriendRatings', handler.handleGetFriendRatings);
app.get('/searchRatedMovie', handler.searchRatedMovie);

app.get('/*', function (a, b) {
  b.redirect('/');
});

var port = process.env.PORT || 3000;
app.listen(port, function () {});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci5qcyJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxdWlyZSIsImV4cHJlc3MiLCJhcHAiLCJib2R5UGFyc2VyIiwic2Vzc2lvbnMiLCJjb3JzIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlcnMiLCJyZWRpcmVjdCIsImhvc3RuYW1lIiwidXJsIiwidXNlIiwiY29va2llTmFtZSIsInNlY3JldCIsInJlc2F2ZSIsImR1cmF0aW9uIiwiYWN0aXZlRHVyYXRpb24iLCJzYXZlSW5pdGlhbGl6ZWQiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic3RhdGljIiwiX19kaXJuYW1lIiwicG9zdCIsInNpZ251cFVzZXIiLCJzaWduaW5Vc2VyIiwibGlzdFJlcXVlc3RzIiwic2VuZFJlcXVlc3QiLCJnZXRUaGlzRnJpZW5kc01vdmllcyIsImxvZ291dCIsInNlbmRXYXRjaFJlcXVlc3QiLCJkZWxldGUiLCJyZW1vdmVXYXRjaFJlcXVlc3QiLCJkZWNsaW5lIiwiYWNjZXB0IiwicmVtb3ZlUmVxdWVzdCIsImZpbmRNb3ZpZUJ1ZGRpZXMiLCJnZXRGcmllbmRzIiwiZ2V0RnJpZW5kTGlzdCIsInJhdGVNb3ZpZSIsImdldFJlY2VudFJlbGVhc2UiLCJnZXRVc2VyUmF0aW5ncyIsImdldEZyaWVuZFVzZXJSYXRpbmdzIiwiZ2V0TXVsdGlwbGVNb3ZpZVJhdGluZ3MiLCJoYW5kbGVHZXRGcmllbmRSYXRpbmdzIiwic2VhcmNoUmF0ZWRNb3ZpZSIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJQSxVQUFVQyxRQUFRLDBCQUFSLENBQWQ7QUFBQSxJQUNJQyxVQUFVRCxRQUFRLFNBQVIsQ0FEZDtBQUFBLElBRUlFLE1BQU1ELFNBRlY7QUFBQSxJQUdJRSxhQUFhSCxRQUFRLGFBQVIsQ0FIakI7QUFBQSxJQUlJSSxXQUFXSixRQUFRLGlCQUFSLENBSmY7QUFBQSxJQUtJSyxP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M0MsSUFBSXdCLElBQUosQ0FBUywwQkFBVCxFQUFxQzNCLFFBQVErQyx1QkFBN0M7QUFDQTVDLElBQUl3QixJQUFKLENBQVMsbUJBQVQsRUFBOEIzQixRQUFRZ0Qsc0JBQXRDO0FBQ0E3QyxJQUFJSSxHQUFKLENBQVEsbUJBQVIsRUFBNkJQLFFBQVFpRCxnQkFBckM7O0FBR0E5QyxJQUFJSSxHQUFKLENBQVEsSUFBUixFQUFjLFVBQVNDLENBQVQsRUFBY0MsQ0FBZCxFQUFtQjtBQUM3QkEsSUFBSUcsUUFBSixDQUFhLEdBQWI7QUFDSCxDQUZEOztBQUlBLElBQUlzQyxPQUFPQyxRQUFRQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBL0I7QUFDQWxELElBQUltRCxNQUFKLENBQVdKLElBQVgsRUFBaUIsWUFBWSxDQUU1QixDQUZEIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG52YXIgaGFuZGxlciA9IHJlcXVpcmUoJy4vbGliL3JlcXVlc3QtaGFuZGxlci5qcycpO1xyXG52YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxudmFyIGFwcCA9IGV4cHJlc3MoKTtcclxudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG52YXIgc2Vzc2lvbnMgPSByZXF1aXJlKFwiY2xpZW50LXNlc3Npb25zXCIpO1xyXG52YXIgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuXHJcbmFwcC5nZXQoJyonLCBmdW5jdGlvbihyZXEscmVzLG5leHQpIHtcclxuICBpZiAocmVxLmhlYWRlcnNbJ3gtZm9yd2FyZGVkLXByb3RvJ10gIT09ICdodHRwcycpIHtcclxuICAgIHJlcy5yZWRpcmVjdCgnaHR0cHM6Ly8nICsgcmVxLmhvc3RuYW1lICsgcmVxLnVybCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIG5leHQoKTtcclxuICB9XHJcbn0pO1xyXG5cclxuYXBwLnVzZShjb3JzKCkpO1xyXG5hcHAudXNlKHNlc3Npb25zKHtcclxuICBjb29raWVOYW1lOiAnbXlTZXNzaW9uJywgLy8gY29va2llIG5hbWUgZGljdGF0ZXMgdGhlIGtleSBuYW1lIGFkZGVkIHRvIHRoZSByZXF1ZXN0IG9iamVjdFxyXG4gIHNlY3JldDogJ2JsYXJnYWRlZWJsYXJnYmxhcmcnLCAvLyBzaG91bGQgYmUgYSBsYXJnZSB1bmd1ZXNzYWJsZSBzdHJpbmdcclxuICByZXNhdmU6IHRydWUsXHJcbiAgZHVyYXRpb246IDI0ICogNjAgKiA2MCAqIDEwMDAsIC8vIGhvdyBsb25nIHRoZSBzZXNzaW9uIHdpbGwgc3RheSB2YWxpZCBpbiBtc1xyXG4gIGFjdGl2ZUR1cmF0aW9uOiAxMDAwICogNjAgKiA1LCAvLyBpZiBleHBpcmVzSW4gPCBhY3RpdmVEdXJhdGlvbiwgdGhlIHNlc3Npb24gd2lsbCBiZSBleHRlbmRlZCBieSBhY3RpdmVEdXJhdGlvbiBtaWxsaXNlY29uZHNcclxuICBzYXZlSW5pdGlhbGl6ZWQ6IHRydWVcclxufSkpO1xyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOiB0cnVlfSkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhfX2Rpcm5hbWUgKyAnL3B1YmxpYycpKTtcclxuYXBwLnVzZSgnL3NjcmlwdHMnLCBleHByZXNzLnN0YXRpYyhfX2Rpcm5hbWUgKyAnL25vZGVfbW9kdWxlcycpKTtcclxuYXBwLnVzZSgnL2NvbXBpbGVkJywgZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy9jb21waWxlZCcpKTtcclxuXHJcblxyXG5hcHAucG9zdCgnL3NpZ251cCcsIGhhbmRsZXIuc2lnbnVwVXNlcik7XHJcbmFwcC5wb3N0KCcvbG9naW4nLCBoYW5kbGVyLnNpZ25pblVzZXIpO1xyXG5hcHAuZ2V0KCcvbG9naW4nLGZ1bmN0aW9uKHJlcSxyZXMpe1xyXG5cdGNvbnNvbGUubG9nKCdsb2VpandmbG9lamZlbGlmamRwJylcclxufSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy9IYW5kbGluZyBmcmllbmRzXHJcbi8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuLy9mcmllbmQgcmVxdWVzdHNcclxuYXBwLnBvc3QoJy9saXN0UmVxdWVzdHMnLCBoYW5kbGVyLmxpc3RSZXF1ZXN0cyk7XHJcbmFwcC5wb3N0KCcvc2VuZFJlcXVlc3QnLCBoYW5kbGVyLnNlbmRSZXF1ZXN0KTtcclxuLy9GcmllbmQgcmVxdWVzdHNcclxuYXBwLnBvc3QoJy9nZXRUaGlzRnJpZW5kc01vdmllcycsaGFuZGxlci5nZXRUaGlzRnJpZW5kc01vdmllcylcclxuYXBwLnBvc3QoJy9sb2dvdXQnLCBoYW5kbGVyLmxvZ291dCk7XHJcblxyXG5hcHAucG9zdCgnL3NlbmRXYXRjaFJlcXVlc3QnLGhhbmRsZXIuc2VuZFdhdGNoUmVxdWVzdClcclxuYXBwLmRlbGV0ZSgnL3NlbmRXYXRjaFJlcXVlc3QnLCBoYW5kbGVyLnJlbW92ZVdhdGNoUmVxdWVzdClcclxuXHJcbmFwcC5wb3N0KCcvZGVjbGluZScsIGhhbmRsZXIuZGVjbGluZSk7XHJcbmFwcC5wb3N0KCcvYWNjZXB0JywgaGFuZGxlci5hY2NlcHQpO1xyXG5hcHAuZGVsZXRlKCcvcmVtb3ZlUmVxdWVzdCcsIGhhbmRsZXIucmVtb3ZlUmVxdWVzdClcclxuXHJcbmFwcC5wb3N0KCcvZmluZE1vdmllQnVkZGllcycsaGFuZGxlci5maW5kTW92aWVCdWRkaWVzKVxyXG5hcHAucG9zdCgnL2dldEZyaWVuZHMnLGhhbmRsZXIuZ2V0RnJpZW5kcylcclxuYXBwLmdldCgnL2dldEZyaWVuZExpc3QnLCBoYW5kbGVyLmdldEZyaWVuZExpc3QpXHJcblxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vSGFuZGxpbmcgbW92aWVzXHJcbi8vLy8vLy8vLy8vLy8vLy8vL1xyXG5hcHAucG9zdCgnL3JhdGVtb3ZpZScsIGhhbmRsZXIucmF0ZU1vdmllKTtcclxuYXBwLmdldCgnL3JlY2VudFJlbGVhc2UnLCBoYW5kbGVyLmdldFJlY2VudFJlbGVhc2UpO1xyXG5hcHAuZ2V0KCcvZ2V0VXNlclJhdGluZ3MnLCBoYW5kbGVyLmdldFVzZXJSYXRpbmdzKTtcclxuYXBwLmdldCgnL2dldEZyaWVuZFVzZXJSYXRpbmdzJywgaGFuZGxlci5nZXRGcmllbmRVc2VyUmF0aW5ncyk7XHJcbmFwcC5wb3N0KCcvZ2V0TXVsdGlwbGVNb3ZpZVJhdGluZ3MnLCBoYW5kbGVyLmdldE11bHRpcGxlTW92aWVSYXRpbmdzKTtcclxuYXBwLnBvc3QoJy9nZXRGcmllbmRSYXRpbmdzJywgaGFuZGxlci5oYW5kbGVHZXRGcmllbmRSYXRpbmdzKTtcclxuYXBwLmdldCgnL3NlYXJjaFJhdGVkTW92aWUnLCBoYW5kbGVyLnNlYXJjaFJhdGVkTW92aWUpO1xyXG5cclxuXHJcbmFwcC5nZXQoJy8qJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcclxuICAgIHJlcy5yZWRpcmVjdCgnLycpO1xyXG59KTtcclxuXHJcbnZhciBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xyXG5hcHAubGlzdGVuKHBvcnQsIGZ1bmN0aW9uICgpIHtcclxuICBjb25zb2xlLmxvZygnTGlzdGVuaW5nIG9uIHBvcnQgMzAwMCEnKTtcclxufSk7Il19