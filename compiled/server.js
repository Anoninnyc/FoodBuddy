'use strict';

var handler = require('./lib/request-handler.js'),
    express = require('express'),
    app = express(),
    bodyParser = require('body-parser'),
    sessions = require("client-sessions"),
    cors = require('cors');


app.get('*', function (a, b, c) {
  if (a.headers['x-forwarded-proto'] !== 'https') {
    b.redirect('https://' + a.hostname + a.url);
  } else {
    c();
  }
});

app.use(cors());
app.use(sessions({
  cookieName: 'mySession', // cookie name dictates the key name added to the request object
  secret: 'blargadeeblargblarg', // should be a large unguessable string
  resave: !0,
  duration: 24 * 60 * 60 * 1000, // how long the session will stay valid in ms
  activeDuration: 1000 * 60 * 5, // if expiresIn < activeDuration, the session will be extended by activeDuration milliseconds
  saveInitialized: !0
}));

app.use(bodyParser.urlencoded({ extended: !0 }));
app.use(bodyParser.json());
app.use(express.static(__dirname + '/public'));
app.use('/scripts', express.static(__dirname + '/node_modules'));
app.use('/compiled', express.static(__dirname + '/compiled'));

app.post('/signup', handler.signupUser);
app.post('/login', handler.signinUser);
app.get('/login', function (a, b) {});

//////////////////
//Handling friends
//////////////////

//friend requests
app.post('/listRequests', handler.listRequests);
app.post('/sendRequest', handler.sendRequest);
//Friend requests
app.post('/getThisFriendsMovies', handler.getThisFriendsMovies);
app.post('/logout', handler.logout);

app.post('/sendWatchRequest', handler.sendWatchRequest);
app.delete('/sendWatchRequest', handler.removeWatchRequest);

app.post('/decline', handler.decline);
app.post('/accept', handler.accept);
app.delete('/removeRequest', handler.removeRequest);

app.post('/findMovieBuddies', handler.findMovieBuddies);
app.post('/getFriends', handler.getFriends);
app.get('/getFriendList', handler.getFriendList);

//////////////////
//Handling movies
//////////////////
app.post('/ratemovie', handler.rateMovie);
app.get('/recentRelease', handler.getRecentRelease);
app.get('/getUserRatings', handler.getUserRatings);
app.get('/getFriendUserRatings', handler.getFriendUserRatings);
app.post('/getMultipleMovieRatings', handler.getMultipleMovieRatings);
app.post('/getFriendRatings', handler.handleGetFriendRatings);
app.get('/searchRatedMovie', handler.searchRatedMovie);

app.get('*', function () {
  res.redirect("/login");
});

var port = process.env.PORT || 3000;
app.listen(port, function () {});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci5qcyJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxdWlyZSIsImV4cHJlc3MiLCJhcHAiLCJib2R5UGFyc2VyIiwic2Vzc2lvbnMiLCJjb3JzIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlcnMiLCJyZWRpcmVjdCIsImhvc3RuYW1lIiwidXJsIiwidXNlIiwiY29va2llTmFtZSIsInNlY3JldCIsInJlc2F2ZSIsImR1cmF0aW9uIiwiYWN0aXZlRHVyYXRpb24iLCJzYXZlSW5pdGlhbGl6ZWQiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic3RhdGljIiwiX19kaXJuYW1lIiwicG9zdCIsInNpZ251cFVzZXIiLCJzaWduaW5Vc2VyIiwibGlzdFJlcXVlc3RzIiwic2VuZFJlcXVlc3QiLCJnZXRUaGlzRnJpZW5kc01vdmllcyIsImxvZ291dCIsInNlbmRXYXRjaFJlcXVlc3QiLCJkZWxldGUiLCJyZW1vdmVXYXRjaFJlcXVlc3QiLCJkZWNsaW5lIiwiYWNjZXB0IiwicmVtb3ZlUmVxdWVzdCIsImZpbmRNb3ZpZUJ1ZGRpZXMiLCJnZXRGcmllbmRzIiwiZ2V0RnJpZW5kTGlzdCIsInJhdGVNb3ZpZSIsImdldFJlY2VudFJlbGVhc2UiLCJnZXRVc2VyUmF0aW5ncyIsImdldEZyaWVuZFVzZXJSYXRpbmdzIiwiZ2V0TXVsdGlwbGVNb3ZpZVJhdGluZ3MiLCJoYW5kbGVHZXRGcmllbmRSYXRpbmdzIiwic2VhcmNoUmF0ZWRNb3ZpZSIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJQSxVQUFVQyxRQUFRLDBCQUFSLENBQWQ7QUFBQSxJQUNJQyxVQUFVRCxRQUFRLFNBQVIsQ0FEZDtBQUFBLElBRUlFLE1BQU1ELFNBRlY7QUFBQSxJQUdJRSxhQUFhSCxRQUFRLGFBQVIsQ0FIakI7QUFBQSxJQUlJSSxXQUFXSixRQUFRLGlCQUFSLENBSmY7QUFBQSxJQUtJSyxP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M0MsSUFBSXdCLElBQUosQ0FBUywwQkFBVCxFQUFxQzNCLFFBQVErQyx1QkFBN0M7QUFDQTVDLElBQUl3QixJQUFKLENBQVMsbUJBQVQsRUFBOEIzQixRQUFRZ0Qsc0JBQXRDO0FBQ0E3QyxJQUFJSSxHQUFKLENBQVEsbUJBQVIsRUFBNkJQLFFBQVFpRCxnQkFBckM7O0FBR0E5QyxJQUFJSSxHQUFKLENBQVEsR0FBUixFQUFhLFlBQVU7QUFDckJFLE1BQUlHLFFBQUosQ0FBYSxRQUFiO0FBQ0QsQ0FGRDs7QUFJQSxJQUFJc0MsT0FBT0MsUUFBUUMsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQS9CO0FBQ0FsRCxJQUFJbUQsTUFBSixDQUFXSixJQUFYLEVBQWlCLFlBQVksQ0FFNUIsQ0FGRCIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxudmFyIGhhbmRsZXIgPSByZXF1aXJlKCcuL2xpYi9yZXF1ZXN0LWhhbmRsZXIuanMnKTtcclxudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbnZhciBhcHAgPSBleHByZXNzKCk7XHJcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcclxudmFyIHNlc3Npb25zID0gcmVxdWlyZShcImNsaWVudC1zZXNzaW9uc1wiKTtcclxudmFyIGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XHJcblxyXG5hcHAuZ2V0KCcqJywgZnVuY3Rpb24ocmVxLHJlcyxuZXh0KSB7XHJcbiAgaWYgKHJlcS5oZWFkZXJzWyd4LWZvcndhcmRlZC1wcm90byddICE9PSAnaHR0cHMnKSB7XHJcbiAgICByZXMucmVkaXJlY3QoJ2h0dHBzOi8vJyArIHJlcS5ob3N0bmFtZSArIHJlcS51cmwpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBuZXh0KCk7XHJcbiAgfVxyXG59KTtcclxuXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShzZXNzaW9ucyh7XHJcbiAgY29va2llTmFtZTogJ215U2Vzc2lvbicsIC8vIGNvb2tpZSBuYW1lIGRpY3RhdGVzIHRoZSBrZXkgbmFtZSBhZGRlZCB0byB0aGUgcmVxdWVzdCBvYmplY3RcclxuICBzZWNyZXQ6ICdibGFyZ2FkZWVibGFyZ2JsYXJnJywgLy8gc2hvdWxkIGJlIGEgbGFyZ2UgdW5ndWVzc2FibGUgc3RyaW5nXHJcbiAgcmVzYXZlOiB0cnVlLFxyXG4gIGR1cmF0aW9uOiAyNCAqIDYwICogNjAgKiAxMDAwLCAvLyBob3cgbG9uZyB0aGUgc2Vzc2lvbiB3aWxsIHN0YXkgdmFsaWQgaW4gbXNcclxuICBhY3RpdmVEdXJhdGlvbjogMTAwMCAqIDYwICogNSwgLy8gaWYgZXhwaXJlc0luIDwgYWN0aXZlRHVyYXRpb24sIHRoZSBzZXNzaW9uIHdpbGwgYmUgZXh0ZW5kZWQgYnkgYWN0aXZlRHVyYXRpb24gbWlsbGlzZWNvbmRzXHJcbiAgc2F2ZUluaXRpYWxpemVkOiB0cnVlXHJcbn0pKTtcclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDogdHJ1ZX0pKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy9wdWJsaWMnKSk7XHJcbmFwcC51c2UoJy9zY3JpcHRzJywgZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy9ub2RlX21vZHVsZXMnKSk7XHJcbmFwcC51c2UoJy9jb21waWxlZCcsIGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSArICcvY29tcGlsZWQnKSk7XHJcblxyXG5cclxuYXBwLnBvc3QoJy9zaWdudXAnLCBoYW5kbGVyLnNpZ251cFVzZXIpO1xyXG5hcHAucG9zdCgnL2xvZ2luJywgaGFuZGxlci5zaWduaW5Vc2VyKTtcclxuYXBwLmdldCgnL2xvZ2luJyxmdW5jdGlvbihyZXEscmVzKXtcclxuXHRjb25zb2xlLmxvZygnbG9laWp3ZmxvZWpmZWxpZmpkcCcpXHJcbn0pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vSGFuZGxpbmcgZnJpZW5kc1xyXG4vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbi8vZnJpZW5kIHJlcXVlc3RzXHJcbmFwcC5wb3N0KCcvbGlzdFJlcXVlc3RzJywgaGFuZGxlci5saXN0UmVxdWVzdHMpO1xyXG5hcHAucG9zdCgnL3NlbmRSZXF1ZXN0JywgaGFuZGxlci5zZW5kUmVxdWVzdCk7XHJcbi8vRnJpZW5kIHJlcXVlc3RzXHJcbmFwcC5wb3N0KCcvZ2V0VGhpc0ZyaWVuZHNNb3ZpZXMnLGhhbmRsZXIuZ2V0VGhpc0ZyaWVuZHNNb3ZpZXMpXHJcbmFwcC5wb3N0KCcvbG9nb3V0JywgaGFuZGxlci5sb2dvdXQpO1xyXG5cclxuYXBwLnBvc3QoJy9zZW5kV2F0Y2hSZXF1ZXN0JyxoYW5kbGVyLnNlbmRXYXRjaFJlcXVlc3QpXHJcbmFwcC5kZWxldGUoJy9zZW5kV2F0Y2hSZXF1ZXN0JywgaGFuZGxlci5yZW1vdmVXYXRjaFJlcXVlc3QpXHJcblxyXG5hcHAucG9zdCgnL2RlY2xpbmUnLCBoYW5kbGVyLmRlY2xpbmUpO1xyXG5hcHAucG9zdCgnL2FjY2VwdCcsIGhhbmRsZXIuYWNjZXB0KTtcclxuYXBwLmRlbGV0ZSgnL3JlbW92ZVJlcXVlc3QnLCBoYW5kbGVyLnJlbW92ZVJlcXVlc3QpXHJcblxyXG5hcHAucG9zdCgnL2ZpbmRNb3ZpZUJ1ZGRpZXMnLGhhbmRsZXIuZmluZE1vdmllQnVkZGllcylcclxuYXBwLnBvc3QoJy9nZXRGcmllbmRzJyxoYW5kbGVyLmdldEZyaWVuZHMpXHJcbmFwcC5nZXQoJy9nZXRGcmllbmRMaXN0JywgaGFuZGxlci5nZXRGcmllbmRMaXN0KVxyXG5cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vL0hhbmRsaW5nIG1vdmllc1xyXG4vLy8vLy8vLy8vLy8vLy8vLy9cclxuYXBwLnBvc3QoJy9yYXRlbW92aWUnLCBoYW5kbGVyLnJhdGVNb3ZpZSk7XHJcbmFwcC5nZXQoJy9yZWNlbnRSZWxlYXNlJywgaGFuZGxlci5nZXRSZWNlbnRSZWxlYXNlKTtcclxuYXBwLmdldCgnL2dldFVzZXJSYXRpbmdzJywgaGFuZGxlci5nZXRVc2VyUmF0aW5ncyk7XHJcbmFwcC5nZXQoJy9nZXRGcmllbmRVc2VyUmF0aW5ncycsIGhhbmRsZXIuZ2V0RnJpZW5kVXNlclJhdGluZ3MpO1xyXG5hcHAucG9zdCgnL2dldE11bHRpcGxlTW92aWVSYXRpbmdzJywgaGFuZGxlci5nZXRNdWx0aXBsZU1vdmllUmF0aW5ncyk7XHJcbmFwcC5wb3N0KCcvZ2V0RnJpZW5kUmF0aW5ncycsIGhhbmRsZXIuaGFuZGxlR2V0RnJpZW5kUmF0aW5ncyk7XHJcbmFwcC5nZXQoJy9zZWFyY2hSYXRlZE1vdmllJywgaGFuZGxlci5zZWFyY2hSYXRlZE1vdmllKTtcclxuXHJcblxyXG5hcHAuZ2V0KCcqJywgZnVuY3Rpb24oKXtcclxuICByZXMucmVkaXJlY3QoXCIvbG9naW5cIilcclxufSk7XHJcblxyXG52YXIgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcclxuYXBwLmxpc3Rlbihwb3J0LCBmdW5jdGlvbiAoKSB7XHJcbiAgY29uc29sZS5sb2coJ0xpc3RlbmluZyBvbiBwb3J0IDMwMDAhJyk7XHJcbn0pOyJdfQ==